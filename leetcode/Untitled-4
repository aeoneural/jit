/*
inputs: array of unsorted integers
output: array of integers that add up to sum
in ascending order
sum = 20
input :[2, 7, 4, 0, 9, 5,1,3]
sortArray [0, 1, 2, 3, 4, 5, 7, 9]; n log n
[0, 1, , ]
*/
function findArrayQuadruplet(arr, s) {
  // your code goes here
  var solution = [];
  arr.sort();
  
  function findQuadruplet (arr, currentSum, result) {
    
    if (result.length === 4) {
      if (currentSum === 0) {
        solution = [...result];
        return;
      }
    }
    
    for (var i = 0; i < arr.length; i++) {
      
      findQuadruplet(arr.slice(0, i).concat(arr.slice(i + 1)) , currentSum - arr[i], result.concat(arr[i]));
      
    }  
  }
  
  findQuadruplet (arr, 20, []);
  return solution;
}


var array = [2, 7, 4, 0, 9, 5,1,3];

console.log(findArrayQuadruplet(array, 20));